@import "variables";
@keyframes arrowBounce {
  0%   { padding-left: 40px; }
  100% { padding-left: 0;}
}
$headerBorder: #fff;

.dataTable {
  position: relative;

  .title {
    font-size: 18px;
    font-weight: normal;
    letter-spacing: 0.5px;
    padding: 10px;
  }

  .table {
    width: 100%;
    text-align: center;
    table-layout: fixed;

    td, th {
      height: 54px;
      border-style: solid;
      border-width: 2px;
    }
    td {
      position: relative;  /* for invalid-marker placement */
      font-size: 20px;
      font-weight: bold;
      border-color: #efefef;
      color: $textBlack;
      &:last-child {
        border-right-color: $headerBorder;
      }
    }
    th {
      font-size: 15px;
      font-weight: normal;
      color: $textBlack;
      background-color: $ccTealLight3;
      border-color: $headerBorder;
      text-align: center;
    }
    tr:last-child td {
      border-bottom-color: $headerBorder;
    }
    .readOnly {
      font-size: 15px;
      font-weight: normal;
      color: $textBlack;
      border-color: $headerBorder;
      background-color: $ccTealLight4;
    }
    .sensorField {
      color: $ccOrange;
      input:focus {
        border: solid 2px $ccOrange;
      }
      .valueCell{
        .arrowOverlay{
          position: absolute;
          background-color: $ccGray;
          height: 24px;
          width: 100%;
        }
        .arrowOverlayFirst{
          position: absolute;
          width: 0;
          height: 0;
          border-top: 12px solid white;
          border-right: 24px solid $ccGray;
          border-bottom: 12px solid white;
          animation-name: arrowBounce;
          animation-duration: 2s;
          animation-iteration-count: 1;
          .dataPrompt{
            position: absolute;
            font-size: 15px;
            font-weight: normal;
            left: 0px;
            top: -10px;
            width: 200px;
            color: $ccGrayLight1;
            z-index: 2;
            animation-name: arrowBounce;
            animation-duration: 2s;
            animation-iteration-count: 1;
          }
        }
      }
    }
    .function {
      color: $ccTealDark2;
      input {
        background-color: $ccOrangeLight4;
      }
    }
    .invalid {
      color: #f00;
      border: solid 1px #f00;
      input:focus {
        border: solid 2px #f00;
      }
    }
    .invalidMarker {
      position: absolute;
      top: 0;
      right: 0;
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 0 16px 16px 0;
      border-color: transparent #ff0000 transparent transparent;
    }
    .invalidError {
      font-size: 0.7em;
      font-weight: normal;
    }
    .complete > .readOnly {
      background-color: $ccTealLight3;
    }
    .grayedOut {
      th {
        background-color: $ccGray;
      }
      .readOnly {
        background-color: $ccGray;
      }
    }
    input, select {
      border: none;
      width: 100%;
      height: 100%;
      text-align: center;
      &:focus {
        outline: none;
        border: solid 2px $ccTeal;
      }
    }
    input[disabled], select[disabled] {
      opacity: 1;
    }
    .refreshSensorReadingColumn {
      width: 54px;
    }
    .refreshSensorReading {
      height: 40px;
      width: 40px;
      border-radius: 20px;
      border: 4px solid #fff;
      background-color: $sensorGreenLight2;
      margin: 0 auto;
      display: flex;
      justify-content: center;
      align-items: center;
      &.active {
        background-color: $sensorGreenLight1;
        &.refresh {
          background-color: $sensorGreenLight1;
        }
        &.record {
          background-color: $sensorGreenLight1;
        }
        &:hover {
          cursor: pointer;
        }
      }
      svg {
        fill: #fff;
      }
    }
  }

  .editModeText {
    display: flex;
    align-items: center;
    font-size: 14px;
    margin-left: 15px;
    svg {
      fill: #198ec4;
      margin-right: 10px;
    }
  }

  .topBar {
    min-height: 30px;
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;

    .topBarLeft {
      flex-grow: 1;
    }
    .topBarRight {
      .button {
        display: inline-block;
        margin-right: 10px;
        margin-bottom: 10px;
        border: 1px solid $ccTealDark2;
        background-color: #fff;
        color: $ccTealDark2;
        border-radius: 5px;
        padding: 3px 8px 2px 10px;
        text-transform: uppercase;
        outline: none;
      }
      button:hover {
        background-color: rgba(11, 128, 155, 0.12);
      }
      .buttonDisabled {
        border-color: #777;
        color: #777;
      }
    }
  }

  .menu {
    position: absolute;
    top: 0;
    right: 10px;
    display: flex;
    flex-direction: row;
  }
}
